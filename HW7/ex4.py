from Crypto.PublicKey import RSA
import math
from Crypto.Hash import SHA256

def square_multiply(a, x, n):
    out = 1
    for i in bin(x)[2:]:
        out = out**2 % n
        if i == "1":
            out = (a * out) % n
    return out

public_key = open('mykey.pem.pub','r').read()
rsakey = RSA.importKey(public_key)
# public key
public_key_n = rsakey.n
public_key_e = rsakey.e

# random 1024-bit number obtained from https://numbergenerator.org/random-1024-bit-binary-number
s = int

x = square_multiply(s, public_key_e, public_key_n)

print("Signature sent on behalf of Alice: ", s, "\n")
print("Message sent on behalf of Alice: ", x, "\n")

x_prime = square_multiply(s, public_key_e, public_key_n)

print("Signature computed by Bob: ", x_prime, "\n")

assert x == x_prime

if x == x_prime:
    print("the signature received is a valid signature for the message.")